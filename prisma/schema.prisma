// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Projects {
  id           String     @id @unique @default(uuid())
  judul        String
  category     String
  url          String?
  photo        String?
  tech         String?
  site         String?
  desc         String?
  status       String?
  createdAt    DateTime?  @default(now()) @map("created_at")
  updatedAt    DateTime?  @default(now()) @map("updated_at")
}

model Certificates {
  id        Int       @id @default(autoincrement())
  name      String
  desc      String
  date      String
  site      String
  photo     String?
  status    String?      
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @default(now()) @map("updated_at")
}

model Educations {
  id     Int      @id @default(autoincrement())
  name   String
  school String
  major  String
  date   String
}

model Experiences {
  id           Int       @id @default(autoincrement())
  company_name String
  position     String
  duration     String
  type         String
  jobdesks     Jobdesk[]
  createdAt    DateTime?  @default(now()) @map("created_at")
  updatedAt    DateTime?  @default(now()) @map("updated_at")
}

model Jobdesk {
  id           Int          @id @default(autoincrement())
  experiences  Experiences  @relation(fields: [experiences_id], references: [id], onDelete: Cascade)
  experiences_id Int
  description  String
  createdAt    DateTime?    @default(now()) @map("created_at")
  updatedAt    DateTime?    @default(now()) @map("updated_at")
}

model Users {
  id            Int       @id @default(autoincrement())
  username      String    @unique
  password      String
  createdAt     DateTime? @default(now()) @map("created_at")
  updatedAt     DateTime? @default(now()) @map("updated_at")
}

model TechStack {
  id            Int       @id @default(autoincrement())
  name          String   
  image         String
  description   String?
  createdAt     DateTime? @default(now()) @map("created_at")
  updatedAt     DateTime? @default(now()) @map("updated_at")
}

model About {
   id           Int       @id @default(autoincrement())
   about        String
   what_i_do    String
   role         String?
  createdAt     DateTime? @default(now()) @map("created_at")
  cpdatedAt     DateTime? @default(now()) @map("updated_at")
}